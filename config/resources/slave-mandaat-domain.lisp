;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; MANDAAT ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; this is a shared domain file, maintained in https://github.com/lblod/domain-files

(define-resource fractie ()
  :class (s-prefix "mandaat:Fractie")
  :properties `((:naam :string ,(s-prefix "regorg:legalName"))
                (:generated-from :uri-set ,(s-prefix "ext:generatedFrom"))) ;;if it e.g. comes from gelinkt-notuleren
  :resource-base (s-url "http://data.lblod.info/id/fracties/")
  :has-many `((bestuursorgaan :via ,(s-prefix "org:memberOf")
                              :as "bestuursorganen-in-tijd"))
  :has-one `((bestuurseenheid :via ,(s-prefix "org:linkedTo")
                              :as "bestuurseenheid")
             (fractietype :via ,(s-prefix "ext:isFractietype")
                          :as "fractietype"))
  :features '(include-uri)
  :on-path "fracties")

(define-resource fractietype ()
  :class (s-prefix "ext:Fractietype")
  :properties `((:label :string ,(s-prefix "skos:prefLabel"))
                (:scope-note :string ,(s-prefix "skos:scopeNote")))
  :resource-base (s-url "http://data.vlaanderen.be/id/concept/Fractietype/")
  :features '(include-uri)
  :on-path "fractietypes")

(define-resource geboorte ()
  :class (s-prefix "persoon:Geboorte")
  :properties `((:datum :date ,(s-prefix "persoon:datum")))
  :resource-base (s-url "http://data.lblod.info/id/geboortes/")
  :features '(include-uri)
  :on-path "geboortes")

(define-resource lijsttype ()
  :class (s-prefix "ext:KandidatenlijstLijsttype")
  :properties `((:label :string ,(s-prefix "skos:prefLabel"))
                (:scope-note :string ,(s-prefix "skos:scopeNote")))
  :resource-base (s-url "http://data.vlaanderen.be/id/concept/KandidatenlijstLijsttype/")
  :features '(include-uri)
  :on-path "lijsttypes")

(define-resource kandidatenlijst ()
  :class (s-prefix "mandaat:Kandidatenlijst")
  :properties `((:lijstnaam :string ,(s-prefix "skos:prefLabel"))
                (:lijstnummer :number ,(s-prefix "mandaat:lijstnummer")))
  :has-many `((persoon :via ,(s-prefix "mandaat:heeftKandidaat")
                       :as "kandidaten"))
  :has-one `((lijsttype :via ,(s-prefix "mandaat:lijsttype")
                        :as "lijsttype"))
  :resource-base (s-url "http://data.lblod.info/id/kandidatenlijsten/")
  :features '(include-uri)
  :on-path "kandidatenlijsten")

(define-resource lidmaatschap ()
  :class (s-prefix "org:Membership")
  :has-one `((fractie :via ,(s-prefix "org:organisation")
                      :as "binnen-fractie")
             (mandataris :via ,(s-prefix "org:hasMembership")
                         :inverse t
                         :as "lid")
             (tijdsinterval :via ,(s-prefix "org:memberDuring")
                            :as "lid-gedurende"))
  :resource-base (s-url "http://data.lblod.info/id/lidmaatschappen/")
  :features '(include-uri)
  :on-path "lidmaatschappen")

(define-resource bestuursfunctie-code ()
  :class (s-prefix "ext:BestuursfunctieCode")
  :properties `((:label :string ,(s-prefix "skos:prefLabel"))
                (:scope-note :string ,(s-prefix "skos:scopeNote")))
  :resource-base (s-url "http://data.vlaanderen.be/id/concept/BestuursfunctieCode/")
  :features '(include-uri)
  :on-path "bestuursfunctie-codes")

(define-resource mandataris-status-code ()
  :class (s-prefix "ext:MandatarisStatusCode")
  :properties `((:label :string ,(s-prefix "skos:prefLabel"))
                (:scope-note :string ,(s-prefix "skos:scopeNote")))
  :resource-base (s-url "http://data.vlaanderen.be/id/concept/MandatarisStatusCode/")
  :features '(include-uri)
  :on-path "mandataris-status-codes")

(define-resource beleidsdomein-code ()
  :class (s-prefix "ext:BeleidsdomeinCode")
  :properties `((:label :string ,(s-prefix "skos:prefLabel"))
                (:scope-note :string ,(s-prefix "skos:scopeNote")))
  :has-many `((mandataris :via ,(s-prefix "mandaat:beleidsdomein")
                          :inverse t
                          :as "mandatarissen"))
  :resource-base (s-url "http://data.vlaanderen.be/id/concept/BeleidsdomeinCode/")
  :features '(include-uri)
  :on-path "beleidsdomein-codes")

(define-resource persoon ()
  :class (s-prefix "person:Person")
  :properties `((:achternaam :string ,(s-prefix "foaf:familyName"))
                (:alternatieve-naam :string ,(s-prefix "foaf:name"))
                (:gebruikte-voornaam :string ,(s-prefix "persoon:gebruikteVoornaam")))
  :has-many `((mandataris :via ,(s-prefix "mandaat:isBestuurlijkeAliasVan")
                          :inverse t
                          :as "is-aangesteld-als")
              (kandidatenlijst :via ,(s-prefix "mandaat:heeftKandidaat")
                               :inverse t
                               :as "is-kandidaat-voor")
              (nationality :via ,(s-prefix "persoon:heeftNationaliteit")
                            :as "nationalities"))
  :has-one `((geboorte :via ,(s-prefix "persoon:heeftGeboorte")
                       :as "geboorte")
             (identificator :via ,(s-prefix "adms:identifier")
                            :as "identificator")
             (geslacht-code :via ,(s-prefix "persoon:geslacht")
                            :as "geslacht"))
  :resource-base (s-url "http://data.lblod.info/id/personen/")
  :features '(include-uri)
  :on-path "personen")

(define-resource geslacht-code ()
  :class (s-prefix "ext:GeslachtCode")
  :properties `((:label :string ,(s-prefix "skos:prefLabel"))
                (:scope-note :string ,(s-prefix "skos:scopeNote")))
  :resource-base (s-url "http://data.vlaanderen.be/id/concept/GeslachtCode/")
  :features '(include-uri)
  :on-path "geslacht-codes")

(define-resource nationality ()
  :class (s-prefix "euvoc:Country")
  :properties `((:country-label :string ,(s-prefix "skos:prefLabel"))
                (:nationality-label :string ,(s-prefix "rdfs:label")))
  :resource-base (s-url "http://lblod.data.gift/concepts/")
  :features '(include-uri)
  :on-path "nationalities")

(define-resource identificator ()
  :class (s-prefix "adms:Identifier")
  :properties `((:identificator :string ,(s-prefix "skos:notation"))) ;; TODO: should have a specific type
  :resource-base (s-url "http://data.lblod.info/id/identificatoren/")
  :features '(include-uri)
  :on-path "identificatoren")

(define-resource tijdsinterval ()
  :class (s-prefix "dct:PeriodOfTime")
  :properties `((:begin :datetime ,(s-prefix "generiek:begin"))
                (:einde :datetime ,(s-prefix "generiek:einde")))
  :resource-base (s-url "http://data.lblod.info/id/tijdsintervallen/")
  :features '(include-uri)
  :on-path "tijdsintervallen")

